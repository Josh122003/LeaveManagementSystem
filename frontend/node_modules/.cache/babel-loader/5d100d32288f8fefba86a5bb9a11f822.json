{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshua\\\\OneDrive\\\\Desktop\\\\leave-management-system\\\\frontend\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [leaves, setLeaves] = useState([]);\n  useEffect(() => {\n    const fetchLeaves = async () => {\n      const token = localStorage.getItem('token');\n      const {\n        data\n      } = await axios.get('http://localhost:5000/api/leaves/admin/leaves', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setLeaves(data);\n    };\n    fetchLeaves();\n  }, []);\n  const handleApprove = async leaveId => {\n    const token = localStorage.getItem('token');\n    await axios.put(`http://localhost:5000/api/leaves/admin/approve/${leaveId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLeaves(leaves.map(leave => leave._id === leaveId ? {\n      ...leave,\n      status: 'approved'\n    } : leave));\n  };\n  const handleReject = async leaveId => {\n    const token = localStorage.getItem('token');\n    await axios.put(`http://localhost:5000/api/leaves/admin/reject/${leaveId}`, {}, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    setLeaves(leaves.map(leave => leave._id === leaveId ? {\n      ...leave,\n      status: 'rejected'\n    } : leave));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"All Leave Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leaves.map(leave => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [leave.studentId.username, \" applied for \", leave.type, \" from \", new Date(leave.fromDate).toLocaleDateString(), \" to \", new Date(leave.toDate).toLocaleDateString(), \" - Status: \", leave.status, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleApprove(leave._id),\n          children: \"Approve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleReject(leave._id),\n          children: \"Reject\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, leave._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"Nb3O1EPWW5Mp4lBVOE9AXM3hFAU=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","leaves","setLeaves","fetchLeaves","token","localStorage","getItem","data","get","headers","Authorization","handleApprove","leaveId","put","map","leave","_id","status","handleReject","children","fileName","_jsxFileName","lineNumber","columnNumber","studentId","username","type","Date","fromDate","toLocaleDateString","toDate","onClick","_c","$RefreshReg$"],"sources":["C:/Users/joshua/OneDrive/Desktop/leave-management-system/frontend/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst AdminDashboard = () => {\n    const [leaves, setLeaves] = useState([]);\n\n    useEffect(() => {\n        const fetchLeaves = async () => {\n            const token = localStorage.getItem('token');\n            const { data } = await axios.get('http://localhost:5000/api/leaves/admin/leaves', {\n                headers: { Authorization: `Bearer ${token}` },\n            });\n            setLeaves(data);\n        };\n\n        fetchLeaves();\n    }, []);\n\n    const handleApprove = async (leaveId) => {\n        const token = localStorage.getItem('token');\n        await axios.put(`http://localhost:5000/api/leaves/admin/approve/${leaveId}`, {}, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        setLeaves(leaves.map(leave => leave._id === leaveId ? { ...leave, status: 'approved' } : leave));\n    };\n\n    const handleReject = async (leaveId) => {\n        const token = localStorage.getItem('token');\n        await axios.put(`http://localhost:5000/api/leaves/admin/reject/${leaveId}`, {}, {\n            headers: { Authorization: `Bearer ${token}` },\n        });\n        setLeaves(leaves.map(leave => leave._id === leaveId ? { ...leave, status: 'rejected' } : leave));\n    };\n\n    return (\n        <div>\n            <h2>All Leave Requests</h2>\n            <ul>\n                {leaves.map(leave => (\n                    <li key={leave._id}>\n                        {leave.studentId.username} applied for {leave.type} from {new Date(leave.fromDate).toLocaleDateString()} to {new Date(leave.toDate).toLocaleDateString()} - Status: {leave.status}\n                        <button onClick={() => handleApprove(leave._id)}>Approve</button>\n                        <button onClick={() => handleReject(leave._id)}>Reject</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default AdminDashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}