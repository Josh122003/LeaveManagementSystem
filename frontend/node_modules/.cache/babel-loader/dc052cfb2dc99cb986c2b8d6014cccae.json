{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joshua\\\\OneDrive\\\\Desktop\\\\leave-management-system\\\\frontend\\\\src\\\\components\\\\ForgotPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import the useNavigate hook\nimport axios from 'axios';\nimport '../styles/styles.css'; // Adjust the path to correctly point to your styles.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Initialize the useNavigate hook\n\n  const handlePasswordReset = async () => {\n    if (newPassword !== confirmPassword) {\n      setError('Passwords do not match');\n      setMessage('');\n      return;\n    }\n    try {\n      await axios.post(`${process.env.REACT_APP_API_URL}/auth/reset-password`, {\n        username,\n        password: newPassword\n      });\n      setMessage('Password reset successfully. You can now log in.');\n      setError('');\n    } catch (err) {\n      console.error('Error resetting password:', err);\n      if (err.response && err.response.status === 404) {\n        setError('Username not found. Please check and try again.');\n      } else {\n        setError('Failed to reset password. Please try again.');\n      }\n      setMessage('');\n    }\n  };\n\n  // Navigate back to the login form\n  const handleBackToLogin = () => {\n    navigate('/login'); // Adjust the route as needed\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Enter new password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Confirm new password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        className: \"form-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePasswordReset,\n      className: \"form-button\",\n      children: \"Reset Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBackToLogin,\n      className: \"back-button\",\n      children: \"Back to Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(ForgotPassword, \"0u8qKZU0dNNT6CtxL0Bqd9Y1fUQ=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","axios","jsxDEV","_jsxDEV","ForgotPassword","_s","username","setUsername","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","error","setError","navigate","handlePasswordReset","post","process","env","REACT_APP_API_URL","password","err","console","response","status","handleBackToLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["C:/Users/joshua/OneDrive/Desktop/leave-management-system/frontend/src/components/ForgotPassword.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Import the useNavigate hook\nimport axios from 'axios';\nimport '../styles/styles.css'; // Adjust the path to correctly point to your styles.css\n\nconst ForgotPassword = () => {\n    const [username, setUsername] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n    const [error, setError] = useState('');\n\n    const navigate = useNavigate(); // Initialize the useNavigate hook\n\n    const handlePasswordReset = async () => {\n        if (newPassword !== confirmPassword) {\n            setError('Passwords do not match');\n            setMessage('');\n            return;\n        }\n\n        try {\n            await axios.post(`${process.env.REACT_APP_API_URL}/auth/reset-password`, {\n                username,\n                password: newPassword,\n            });\n            setMessage('Password reset successfully. You can now log in.');\n            setError('');\n        } catch (err) {\n            console.error('Error resetting password:', err);\n            if (err.response && err.response.status === 404) {\n                setError('Username not found. Please check and try again.');\n            } else {\n                setError('Failed to reset password. Please try again.');\n            }\n            setMessage('');\n        }\n    };\n\n    // Navigate back to the login form\n    const handleBackToLogin = () => {\n        navigate('/login'); // Adjust the route as needed\n    };\n\n    return (\n        <div className=\"forgot-password-container\">\n            <h2>Reset Password</h2>\n            <div className=\"form-group\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Enter your username\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    className=\"form-input\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Enter new password\"\n                    value={newPassword}\n                    onChange={(e) => setNewPassword(e.target.value)}\n                    className=\"form-input\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <input\n                    type=\"password\"\n                    placeholder=\"Confirm new password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    className=\"form-input\"\n                />\n            </div>\n            <button onClick={handlePasswordReset} className=\"form-button\">Reset Password</button>\n            {message && <p className=\"success\">{message}</p>}\n            {error && <p className=\"error\" style={{ color: 'red' }}>{error}</p>}\n\n            {/* Back button to navigate to login */}\n            <button onClick={handleBackToLogin} className=\"back-button\">Back to Login</button>\n        </div>\n    );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}